<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1.1 (Python 3.12.7 on win32)" generated="2024-11-21T12:10:50.769931" rpa="false" schemaversion="5">
<suite id="s1" name="getExample" source="C:\Code\robotFramework\test\getExample.robot">
<test id="s1-t1" name="Quick Get Request Test" line="10">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2024-11-21T12:10:51.194517" level="INFO">Creating Session using : alias=reqres, url=https://reqres.in/api, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>reqres</arg>
<arg>${base_url}</arg>
<arg>verify=False</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2024-11-21T12:10:51.194517" elapsed="0.000000"/>
</kw>
<kw name="GET On Session" owner="RequestsLibrary">
<msg time="2024-11-21T12:10:54.394269" level="INFO">GET Request : url=https://reqres.in/api/users?page=2 
 path_url=/api/users?page=2 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2024-11-21T12:10:54.394269" level="INFO">GET Response : url=https://reqres.in/api/users?page=2 
 status=200, reason=OK 
 headers={'Date': 'Thu, 21 Nov 2024 06:40:55 GMT', 'Content-Type': 'application/json; charset=utf-8', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Report-To': '{"group":"heroku-nel","max_age":3600,"endpoints":[{"url":"https://nel.heroku.com/reports?ts=1732157814&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=fDxsYkNOVgZl5oMDwBSRhmnK05nI0qEXDqkqv7GAYoY%3D"}]}', 'Reporting-Endpoints': 'heroku-nel=https://nel.heroku.com/reports?ts=1732157814&amp;sid=c4c9725f-1ab0-44d8-820f-430df2718e11&amp;s=fDxsYkNOVgZl5oMDwBSRhmnK05nI0qEXDqkqv7GAYoY%3D', 'Nel': '{"report_to":"heroku-nel","max_age":3600,"success_fraction":0.005,"failure_fraction":0.05,"response_headers":["Via"]}', 'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': '*', 'Etag': 'W/"440-ZjsmMKR8P3usr2uJZbOCGCxC3Uw"', 'Via': '1.1 vegur', 'Cache-Control': 'max-age=14400', 'CF-Cache-Status': 'HIT', 'Age': '6232', 'Vary': 'Accept-Encoding', 'Server': 'cloudflare', 'CF-RAY': '8e5eb0e94af47f16-MAA', 'Content-Encoding': 'gzip', 'server-timing': 'cfL4;desc="?proto=TCP&amp;rtt=1884&amp;sent=6&amp;recv=7&amp;lost=0&amp;retrans=0&amp;sent_bytes=3144&amp;recv_bytes=621&amp;delivery_rate=2243801&amp;cwnd=252&amp;unsent_bytes=0&amp;cid=48b4438b3859e026&amp;ts=77&amp;x=0"'} 
 body={"page":2,"per_page":6,"total":12,"total_pages":2,"data":[{"id":7,"email":"michael.lawson@reqres.in","first_name":"Michael","last_name":"Lawson","avatar":"https://reqres.in/img/faces/7-image.jpg"},{"id":8,"email":"lindsay.ferguson@reqres.in","first_name":"Lindsay","last_name":"Ferguson","avatar":"https://reqres.in/img/faces/8-image.jpg"},{"id":9,"email":"tobias.funke@reqres.in","first_name":"Tobias","last_name":"Funke","avatar":"https://reqres.in/img/faces/9-image.jpg"},{"id":10,"email":"byron.fields@reqres.in","first_name":"Byron","last_name":"Fields","avatar":"https://reqres.in/img/faces/10-image.jpg"},{"id":11,"email":"george.edwards@reqres.in","first_name":"George","last_name":"Edwards","avatar":"https://reqres.in/img/faces/11-image.jpg"},{"id":12,"email":"rachel.howell@reqres.in","first_name":"Rachel","last_name":"Howell","avatar":"https://reqres.in/img/faces/12-image.jpg"}],"support":{"url":"https://contentcaddy.io?utm_source=reqres&amp;utm_medium=json&amp;utm_campaign=referral","text":"Tired of writing endless social media content? Let Content Caddy generate it for you."}} 
 </msg>
<msg time="2024-11-21T12:10:54.394269" level="INFO">C:\Users\danish.meraj\AppData\Local\Programs\Python\Python312\Lib\site-packages\urllib3\connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host 'reqres.in'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(</msg>
<msg time="2024-11-21T12:10:54.394269" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>reqres</arg>
<arg>/users</arg>
<arg>params=page=${page_id}</arg>
<doc>Sends a GET request on a previously created HTTP Session.</doc>
<status status="PASS" start="2024-11-21T12:10:51.194517" elapsed="3.199752"/>
</kw>
<kw name="Log To Console" owner="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message to the console.</doc>
<status status="PASS" start="2024-11-21T12:10:54.394269" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-21T12:10:54.394269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()['per_page']}</arg>
<arg>6</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-21T12:10:54.394269" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-21T12:10:54.394269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()['total']}</arg>
<arg>12</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-21T12:10:54.394269" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal As Strings" owner="BuiltIn">
<msg time="2024-11-21T12:10:54.394269" level="INFO">Argument types are:
&lt;class 'int'&gt;
&lt;class 'str'&gt;</msg>
<arg>${response.json()['data'][0]['id']}</arg>
<arg>7</arg>
<doc>Fails if objects are unequal after converting them to strings.</doc>
<status status="PASS" start="2024-11-21T12:10:54.394269" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2024-11-21T12:10:51.194517" elapsed="3.199752"/>
</test>
<status status="PASS" start="2024-11-21T12:10:50.785585" elapsed="3.608684"/>
</suite>
<statistics>
<total>
<stat pass="1" fail="0" skip="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" skip="0" id="s1" name="getExample">getExample</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
